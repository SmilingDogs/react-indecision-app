{"version":3,"sources":["components/Action/Action.js","components/AddOption/AddOption.js","components/Header/Header.js","components/Option/Option.js","components/Options/Options.js","components/Modals/AppModal.js","components/ButtonHandler/ButtonHandler.js","App.js","index.js"],"names":["Action","hasOptions","openModal","handlePickOption","className","onClick","disabled","AddOption","options","setOptions","error","setError","optionRef","useRef","onSubmit","e","preventDefault","newOption","current","value","trim","toLowerCase","includes","onBlur","type","ref","placeholder","Header","title","subtitle","defaultProps","Option","optionText","deleteOption","count","Options","optionItems","map","option","index","AppModal","pickedOption","isOpen","closeModal","closeRemoveModal","children","ariaHideApp","contentLabel","onRequestClose","closeTimeoutMS","style","overlay","backgroundColor","ButtonHandler","removeAllOptions","App","optionsLocal","localStorage","getItem","useState","JSON","parse","undefined","setPickedOption","setIsOpen","useEffect","setItem","stringify","length","arr","Math","floor","random","filter","o","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bf200b2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Action = ({ hasOptions, openModal, handlePickOption }) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      onClick={handlePickOption}\r\n      disabled={!hasOptions}\r\n    >\r\n      What should I do?\r\n    </button>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">\r\n        {hasOptions ? \"You have these options:\" : \"No options\"}\r\n      </h3>\r\n      {hasOptions && (\r\n        <button onClick={openModal} className=\"button button--link\">\r\n          Remove all\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Action;\r\n","import React, { useRef } from \"react\";\r\n\r\nconst AddOption = ({ options, setOptions, error, setError }) => {\r\n  const optionRef = useRef();\r\n\r\n  const handleAddOption = (e) => {\r\n    e.preventDefault();\r\n    //* const option = e.target.elements.option.value(если в <input  аттрибут name='option' ) === optionRef.current.value ( если в <input используется useRef())\r\n    const newOption = optionRef.current.value.trim().toLowerCase();\r\n\r\n    if (!newOption) {\r\n      setError(\"This is not a valid option!\");\r\n    } else if (options.includes(newOption)) {\r\n      setError(\"This option already exists!\");\r\n    } else {\r\n      setOptions([...options, newOption]);\r\n      optionRef.current.value = '';\r\n      setError(null)\r\n    }\r\n\r\n  };\r\n\r\n  const clearErrorMessage = () => setError(null)\r\n\r\n  return (\r\n    <div>\r\n      {error && <p className=\"add-option-error\">{error}</p>}\r\n      <form className='form' onSubmit={handleAddOption} onBlur={clearErrorMessage} >\r\n        <input type=\"text\" className='form__input'  ref={optionRef} placeholder=\"New option\" />\r\n        <button type='submit' className='button' >Add Option</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOption;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title, subtitle }) => (\r\n  <header className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{title}</h1>\r\n      {subtitle && <h2 className=\"header__subtitle\">{subtitle}</h2>}\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  title: \"Indecision App\",\r\n  subtitle: \"Let computer decide for you!\",\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Option = ({ optionText, deleteOption, count }) => (\r\n  <li className=\"option\">\r\n    <p className=\"option__text\">\r\n      {count}. {optionText}\r\n    </p>\r\n    <button className=\"button--cross\" onClick={() => deleteOption(optionText)}>\r\n      &times;\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from \"../Option/Option\";\r\n\r\nconst Options = ({ options, deleteOption, hasOptions }) => {\r\n  const optionItems = options.map((option, index) => (\r\n    <Option\r\n      key={option}\r\n      optionText={option}\r\n      deleteOption={deleteOption}\r\n      count={index + 1}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {!hasOptions && (\r\n        <p className=\"widget__message\">Please add an option to get started!</p>\r\n      )}\r\n      {hasOptions && <ol className=\"list\">{optionItems}</ol>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst AppModal = ({ pickedOption, isOpen, closeModal, closeRemoveModal, children, title }) => (\r\n  <Modal\r\n    isOpen={!!pickedOption || isOpen}\r\n    ariaHideApp={false}\r\n    contentLabel=\"Selected option\"\r\n    onRequestClose={closeModal || closeRemoveModal}\r\n    closeTimeoutMS={300}\r\n    className='modal'\r\n    style={{\r\n      overlay: {\r\n        backgroundColor: 'rgba(128, 128, 128, 0.85)'\r\n      },\r\n    }}\r\n  >\r\n  <h3 className=\"modal__title\">{title}</h3>\r\n    {children}\r\n  </Modal>\r\n  //todo if pickedOption=has truthy value, то !!pickedOption ===true\r\n  //todo if pickedOption=undefined, null, ... falsy, то !!pickeOption ===false\r\n);\r\n\r\nexport default AppModal;\r\n","import React from \"react\";\r\n\r\nconst ButtonHandler = ({removeAllOptions, closeRemoveModal}) => {\r\n  return (\r\n    <div className=\"buttons__center\">\r\n      <button onClick={removeAllOptions} className=\"button\">\r\n        Confirm\r\n      </button>\r\n      <button onClick={closeRemoveModal} className=\"button\">\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonHandler;\r\n","import React, { useEffect, useState } from \"react\";\nimport Action from \"./components/Action/Action\";\nimport AddOption from \"./components/AddOption/AddOption\";\nimport Header from \"./components/Header/Header\";\nimport Options from \"./components/Options/Options\";\nimport AppModal from \"./components/Modals/AppModal\";\nimport ButtonHandler from \"./components/ButtonHandler/ButtonHandler\";\n\nfunction App() {\n  // localStorage.clear()\n  const optionsLocal = localStorage.getItem(\"options\");\n  const [options, setOptions] = useState(optionsLocal ? JSON.parse(optionsLocal) : []);\n  //todo reading data from localStorage\n  const [pickedOption, setPickedOption] = useState(undefined);\n\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const randomOption = (arr) => {\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    return arr[randomIndex];\n  };\n\n  const handlePickOption = () => setPickedOption(randomOption(options));\n\n  const closeModal = () => setPickedOption(undefined);\n\n  const openModal = () => setIsOpen(true);\n\n  const closeRemoveModal = () => setIsOpen(false);\n\n  const deleteOption = (option) => setOptions(options.filter((o) => o !== option));\n\n  const removeAllOptions = () => {\n    setOptions([]);\n    setError(null);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"options\", JSON.stringify(options));\n\n  }, [options, pickedOption]); //todo saving data to localStorage\n\n  return (\n    <div className=\"app\">\n      <AppModal\n        pickedOption={pickedOption}\n        closeModal={closeModal}\n        title=\"Try this option:\"\n      >\n        {pickedOption && <p className=\"modal__body\">{pickedOption}</p>}\n        <button onClick={closeModal} className=\"button\">Got it!</button>\n      </AppModal>\n\n      <AppModal\n        isOpen={isOpen}\n        closeRemoveModal={closeRemoveModal}\n        title=\"This will remove all options. Are you sure?\"\n      >\n        <ButtonHandler removeAllOptions={removeAllOptions} closeRemoveModal={closeRemoveModal} />\n      </AppModal>\n\n      <Header />\n      <div className=\"container\">\n        <Action\n          hasOptions={options.length > 0}\n          openModal={openModal}\n          handlePickOption={handlePickOption}\n        />\n        <div className=\"widget\">\n          <Options\n            hasOptions={options.length > 0}\n            options={options}\n            deleteOption={deleteOption}\n          />\n          <AddOption\n            options={options}\n            setOptions={setOptions}\n            error={error}\n            setError={setError}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}