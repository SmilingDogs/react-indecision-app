{"version":3,"sources":["components/Action/Action.js","components/AddOption/AddOption.js","components/Header/Header.js","components/Option/Option.js","components/Options/Options.js","components/Modals/AppModal.js","App.js","index.js"],"names":["Action","hasOptions","openModal","handlePickOption","className","onClick","disabled","AddOption","options","setOptions","error","setError","optionRef","useRef","onSubmit","e","preventDefault","option","current","value","trim","map","o","toLowerCase","includes","onBlur","type","ref","placeholder","Header","title","subtitle","defaultProps","Option","optionText","deleteOption","count","Options","optionItems","index","length","AppModal","pickedOption","isOpen","closeModal","closeRemoveModal","children","ariaHideApp","contentLabel","onRequestClose","closeTimeoutMS","style","overlay","backgroundColor","App","optionsLocal","JSON","parse","localStorage","getItem","useState","undefined","setPickedOption","setIsOpen","useEffect","setItem","stringify","arr","Math","floor","random","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60fb5cc7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Action = ({ hasOptions, openModal, handlePickOption }) => (\r\n  <div>\r\n    <button\r\n      className=\"big-button\"\r\n      onClick={handlePickOption}\r\n      disabled={!hasOptions}\r\n    >\r\n      What should I do?\r\n    </button>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">\r\n        {hasOptions ? \"You have these options:\" : \"No options\"}\r\n      </h3>\r\n      {hasOptions && (\r\n        <button onClick={openModal} className=\"button button--link\">\r\n          Remove all\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Action;\r\n","import React, { useRef} from \"react\";\r\n\r\nconst AddOption = ({ options, setOptions, error, setError }) => {\r\n  const optionRef = useRef();\r\n\r\n  const handleAddOption = (e) => {\r\n    e.preventDefault();\r\n    //* const option = e.target.elements.option.value(если в <input  аттрибут name='option' ) === optionRef.current.value ( если в <input используется useRef())\r\n    const option = optionRef.current.value.trim();\r\n\r\n    if (!option) {\r\n      setError(\"This is not a valid option!\");\r\n    } else if (options.map(o => o.toLowerCase()).includes(option.toLowerCase())) {\r\n      setError(\"This option already exists!\");\r\n    } else {\r\n      setOptions([...options, option]);\r\n      optionRef.current.value = '';\r\n      setError(null)\r\n    }\r\n\r\n  };\r\n\r\n  const clearErrorMessage = () => setError(null)\r\n\r\n  return (\r\n    <div>\r\n      {error && <p className=\"add-option-error\">{error}</p>}\r\n      <form className='form' onSubmit={handleAddOption} onBlur={clearErrorMessage} >\r\n        <input className='form__input' type=\"text\" ref={optionRef} placeholder=\"New option\" />\r\n        <button className='button'>Add Option</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOption;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title, subtitle }) => (\r\n  <header className=\"header\">\r\n    <div className=\"container\">\r\n      <h1 className=\"header__title\">{title}</h1>\r\n      {subtitle && <h2 className=\"header__subtitle\">{subtitle}</h2>}\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  title: \"Indecision App\",\r\n  subtitle: \"Let computer decide for you!\",\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Option = ({ optionText, deleteOption, count }) => (\r\n  <li className='option'>\r\n    <p className='option__text'>{count}. {optionText}</p>\r\n    <button className=\"button--cross\" onClick={() => deleteOption(optionText)}>\r\n     &times;\r\n    </button>\r\n  </li>\r\n)\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from \"../Option/Option\";\r\n\r\nconst Options = ({ options, deleteOption }) => {\r\n\r\n  const optionItems = options.map((option, index) => <Option\r\n    key={option}\r\n    optionText={option}\r\n    deleteOption={deleteOption}\r\n    count={index + 1}\r\n    />)\r\n\r\n\r\n  return (\r\n    <>\r\n      {options.length === 0 && <p className='widget__message'>Please add an option to get started!</p>}\r\n      <ol className='list'>{optionItems}</ol>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst AppModal = ({ pickedOption, isOpen, closeModal, closeRemoveModal, children }) => (\r\n  <Modal\r\n    isOpen={!!pickedOption || isOpen}\r\n    ariaHideApp={false}\r\n    contentLabel=\"Selected option\"\r\n    onRequestClose={closeModal || closeRemoveModal}\r\n    closeTimeoutMS={300}\r\n    className='modal'\r\n    style={{\r\n      overlay: {\r\n        backgroundColor: 'rgba(128, 128, 128, 0.85)'\r\n      },\r\n    }}\r\n  >\r\n    {children}\r\n  </Modal>\r\n  //todo if pickedOption=has truthy value, то !!pickedOption ===true\r\n  //todo if pickedOption=undefined, null, ... falsy, то !!pickeOption ===false\r\n);\r\n\r\nexport default AppModal;\r\n","import React, { useEffect, useState } from \"react\";\nimport Action from \"./components/Action/Action\";\nimport AddOption from \"./components/AddOption/AddOption\";\nimport Header from \"./components/Header/Header\";\nimport Options from \"./components/Options/Options\";\nimport AppModal from \"./components/Modals/AppModal\";\n\nfunction App() {\n  // localStorage.clear()\n  const optionsLocal = JSON.parse(localStorage.getItem(\"options\")) || [];\n  const [options, setOptions] = useState(optionsLocal);\n  //todo reading data from localStorage\n  const [pickedOption, setPickedOption] = useState(undefined);\n  //todo reading data from localStorage\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n\n  const randomOption = (arr) => {\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    return arr[randomIndex];\n  };\n\n  const handlePickOption = () => setPickedOption(randomOption(options));\n\n  const closeModal = () => setPickedOption(undefined);\n\n  const openModal = () => setIsOpen(true);\n\n  const closeRemoveModal = () => setIsOpen(false);\n\n  const deleteOption = option => setOptions(options.filter(o => o !== option));\n\n  const removeAllOptions = () => {\n    setOptions([]);\n    setError(null);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"options\", JSON.stringify(options));\n    localStorage.setItem(\"pickedOption\", JSON.stringify(pickedOption));\n  }, [options, pickedOption]); //todo saving data to localStorage\n\n  return (\n    <div className=\"app\">\n\n      <AppModal pickedOption={pickedOption} closeModal={closeModal}>\n        <h3 className=\"modal__title\">Try this option:</h3>\n        {pickedOption && <p className=\"modal__body\">{pickedOption}</p>}\n        <button onClick={closeModal} className=\"button\">Got it!</button>\n      </AppModal>\n\n      <AppModal isOpen={isOpen} closeRemoveModal={closeRemoveModal}>\n        <h3 className=\"modal__title\">\n          This will remove all options. Are you sure?\n        </h3>\n        <div className=\"buttons__center\">\n          <button onClick={removeAllOptions} className=\"button\">\n            Confirm\n          </button>\n          <button onClick={closeRemoveModal} className=\"button\">\n            Cancel\n          </button>\n        </div>\n      </AppModal>\n\n      <Header />\n      <div className=\"container\">\n        <Action\n          hasOptions={options.length > 0}\n          openModal={openModal}\n          handlePickOption={handlePickOption}\n        />\n        <div className=\"widget\">\n          <Options\n            options={options}\n            deleteOption={deleteOption}\n          />\n          <AddOption\n            options={options}\n            setOptions={setOptions}\n            error={error}\n            setError={setError}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}